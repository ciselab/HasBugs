From 1997614e9a184946bdd66c955660a4e4bc160167 Mon Sep 17 00:00:00 2001
From: Erich Schubert <erich.schubert@tu-dortmund.de>
Date: Fri, 7 May 2021 17:31:17 +0200
Subject: [PATCH 1/2] Do not warn for dimensionality changes in term parser.

---
 .../elki/datasource/parser/NumberVectorLabelParser.java   | 8 +++++++-
 .../java/elki/datasource/parser/TermFrequencyParser.java  | 1 +
 2 files changed, 8 insertions(+), 1 deletion(-)

diff --git a/elki-input/src/main/java/elki/datasource/parser/NumberVectorLabelParser.java b/elki-input/src/main/java/elki/datasource/parser/NumberVectorLabelParser.java
index 0a691c4ce..326075dac 100644
--- a/elki-input/src/main/java/elki/datasource/parser/NumberVectorLabelParser.java
+++ b/elki-input/src/main/java/elki/datasource/parser/NumberVectorLabelParser.java
@@ -137,6 +137,11 @@ public class NumberVectorLabelParser<V extends NumberVector> extends AbstractStr
    */
   boolean warnedPrecision = false;
 
+  /**
+   * Emit a dimensionality change warning once.
+   */
+  boolean warnedDim = false;
+
   /**
    * Constructor.
    *
@@ -211,8 +216,9 @@ public class NumberVectorLabelParser<V extends NumberVector> extends AbstractStr
           if(curdim > maxdim || mindim > curdim) {
             mindim = (curdim < mindim) ? curdim : mindim;
             maxdim = (curdim > maxdim) ? curdim : maxdim;
-            if(mindim != maxdim && LOG.isVerbose()) {
+            if(!warnedDim && mindim != maxdim && LOG.isVerbose()) {
               LOG.verbose("Non-uniform column width detected in input line " + reader.getLineNumber() + ", widening data type to " + mindim + "-" + maxdim + " dimensions.");
+              warnedDim = true;
             }
             buildMeta();
             nextevent = Event.NEXT_OBJECT;
diff --git a/elki-input/src/main/java/elki/datasource/parser/TermFrequencyParser.java b/elki-input/src/main/java/elki/datasource/parser/TermFrequencyParser.java
index 08a32b0fd..858253c0c 100644
--- a/elki-input/src/main/java/elki/datasource/parser/TermFrequencyParser.java
+++ b/elki-input/src/main/java/elki/datasource/parser/TermFrequencyParser.java
@@ -122,6 +122,7 @@ public class TermFrequencyParser<V extends SparseNumberVector> extends NumberVec
     this.keymap = new Object2IntOpenHashMap<>();
     this.keymap.defaultReturnValue(-1);
     this.sparsefactory = factory;
+    this.warnedDim = true; // Disable this warning
   }
 
   @Override
-- 
2.24.3 (Apple Git-128)


From 497fc7aef2b7f5cda0f6ef2ed620b4a937490b62 Mon Sep 17 00:00:00 2001
From: Erich Schubert <erich.schubert@tu-dortmund.de>
Date: Fri, 7 May 2021 18:20:19 +0200
Subject: [PATCH 2/2] Fix k-means variants for k=1 Closes #87

---
 .../src/main/java/elki/clustering/kmeans/AnnulusKMeans.java     | 2 +-
 .../src/main/java/elki/clustering/kmeans/ExponionKMeans.java    | 2 +-
 .../src/main/java/elki/clustering/kmeans/HamerlyKMeans.java     | 2 +-
 .../src/main/java/elki/clustering/kmeans/ShallotKMeans.java     | 2 +-
 .../src/main/java/elki/clustering/kmeans/YinYangKMeans.java     | 2 +-
 5 files changed, 5 insertions(+), 5 deletions(-)

diff --git a/elki-clustering/src/main/java/elki/clustering/kmeans/AnnulusKMeans.java b/elki-clustering/src/main/java/elki/clustering/kmeans/AnnulusKMeans.java
index 59d515c92..52c31775b 100644
--- a/elki-clustering/src/main/java/elki/clustering/kmeans/AnnulusKMeans.java
+++ b/elki-clustering/src/main/java/elki/clustering/kmeans/AnnulusKMeans.java
@@ -135,7 +135,7 @@ public class AnnulusKMeans<V extends NumberVector> extends HamerlyKMeans<V> {
       for(DBIDIter it = relation.iterDBIDs(); it.valid(); it.advance()) {
         NumberVector fv = relation.get(it);
         // Find closest center, and distance to two closest centers
-        double min1 = distance(fv, means[0]), min2 = distance(fv, means[1]);
+        double min1 = distance(fv, means[0]), min2 = k > 1 ? distance(fv, means[1]) : min1;
         int minIndex = 0, secIndex = 1;
         if(min2 < min1) {
           double tmp = min1;
diff --git a/elki-clustering/src/main/java/elki/clustering/kmeans/ExponionKMeans.java b/elki-clustering/src/main/java/elki/clustering/kmeans/ExponionKMeans.java
index 4d7df3062..ee5997848 100644
--- a/elki-clustering/src/main/java/elki/clustering/kmeans/ExponionKMeans.java
+++ b/elki-clustering/src/main/java/elki/clustering/kmeans/ExponionKMeans.java
@@ -118,7 +118,7 @@ public class ExponionKMeans<V extends NumberVector> extends HamerlyKMeans<V> {
       for(DBIDIter it = relation.iterDBIDs(); it.valid(); it.advance()) {
         NumberVector fv = relation.get(it);
         // Find closest center, and distance to two closest centers:
-        double best = distance(fv, means[0]), sbest = distance(fv, means[1]);
+        double best = distance(fv, means[0]), sbest = k > 1 ? distance(fv, means[1]) : best;
         int minIndex = 0;
         if(sbest < best) {
           double tmp = best;
diff --git a/elki-clustering/src/main/java/elki/clustering/kmeans/HamerlyKMeans.java b/elki-clustering/src/main/java/elki/clustering/kmeans/HamerlyKMeans.java
index 578522bdc..a638c0f16 100644
--- a/elki-clustering/src/main/java/elki/clustering/kmeans/HamerlyKMeans.java
+++ b/elki-clustering/src/main/java/elki/clustering/kmeans/HamerlyKMeans.java
@@ -161,7 +161,7 @@ public class HamerlyKMeans<V extends NumberVector> extends AbstractKMeans<V, KMe
       for(DBIDIter it = relation.iterDBIDs(); it.valid(); it.advance()) {
         NumberVector fv = relation.get(it);
         // Find closest center, and distance to two closest centers
-        double min1 = distance(fv, means[0]), min2 = distance(fv, means[1]);
+        double min1 = distance(fv, means[0]), min2 = k > 1 ? distance(fv, means[1]) : min1;
         int minIndex = 0;
         if(min2 < min1) {
           double tmp = min1;
diff --git a/elki-clustering/src/main/java/elki/clustering/kmeans/ShallotKMeans.java b/elki-clustering/src/main/java/elki/clustering/kmeans/ShallotKMeans.java
index e88321978..ed806efd8 100644
--- a/elki-clustering/src/main/java/elki/clustering/kmeans/ShallotKMeans.java
+++ b/elki-clustering/src/main/java/elki/clustering/kmeans/ShallotKMeans.java
@@ -111,7 +111,7 @@ public class ShallotKMeans<V extends NumberVector> extends ExponionKMeans<V> {
       for(DBIDIter it = relation.iterDBIDs(); it.valid(); it.advance()) {
         NumberVector fv = relation.get(it);
         // Find closest center, and distance to two closest centers:
-        double best = distance(fv, means[0]), bes2 = distance(fv, means[1]);
+        double best = distance(fv, means[0]), bes2 = k > 1 ? distance(fv, means[1]) : best;
         int minIdx = 0, minId2 = 1;
         if(bes2 < best) {
           double tmp = best;
diff --git a/elki-clustering/src/main/java/elki/clustering/kmeans/YinYangKMeans.java b/elki-clustering/src/main/java/elki/clustering/kmeans/YinYangKMeans.java
index 40054928b..6cf68fd97 100644
--- a/elki-clustering/src/main/java/elki/clustering/kmeans/YinYangKMeans.java
+++ b/elki-clustering/src/main/java/elki/clustering/kmeans/YinYangKMeans.java
@@ -498,7 +498,7 @@ public class YinYangKMeans<V extends NumberVector> extends AbstractKMeans<V, KMe
     @Override
     public void configure(Parameterization config) {
       super.configure(config);
-      int deft = k > 10 ? k / 10 : k / 2;
+      int deft = k > 10 ? k / 10 : k > 1 ? k / 2 : 1;
       new IntParameter(T_ID) //
           .setDefaultValue(deft) //
           .addConstraint(CommonConstraints.GREATER_EQUAL_ONE_INT)//
-- 
2.24.3 (Apple Git-128)

